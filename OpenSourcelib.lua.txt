local Novauilib = {}

local gui = Instance.new("ScreenGui")
gui.Name = "gui"
gui.Parent = game:GetService("CoreGui")

function Novauilib:CreateTab(Text)
    local Frame = Instance.new("Frame")
    Frame.Size = UDim2.new(0, 250, 0, 300)
    Frame.Position = UDim2.new(0.5, -125, 0.5, -150)
    Frame.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    Frame.BorderSizePixel = 0
    Frame.Active = true
    Frame.Draggable = true
    Frame.Parent = gui

    local Smth = Instance.new("TextLabel")
    Smth.Size = UDim2.new(1, 0, 0, 38.5)
    Smth.BackgroundColor3 = Color3.fromRGB(120, 120, 120)
    Smth.TextScaled = true
    Smth.BorderSizePixel = 0
    Smth.Text = Text or "Untitled Tab"
    Smth.TextColor3 = Color3.new(1, 1, 1)
    Smth.Font = Enum.Font.SourceSans
    Smth.Parent = Frame

    local Close = Instance.new("TextButton")
    Close.Size = UDim2.new(0, 25, 0, 15)
    Close.Position = UDim2.new(0.855, 0, 0.01, 0)
    Close.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
    Close.TextScaled = true
    Close.Text = "+"
    Close.TextColor3 = Color3.new(1, 1, 1)
    Close.Font = Enum.Font.SourceSans
    Close.Parent = Frame

    local ScrollingFrame = Instance.new("ScrollingFrame")
    ScrollingFrame.Size = UDim2.new(1, -10, 1, -50)
    ScrollingFrame.Position = UDim2.new(0, 5, 0, 45)
    ScrollingFrame.BackgroundColor3 = Color3.fromRGB(85, 85, 85)
    ScrollingFrame.BorderSizePixel = 0
    ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    ScrollingFrame.ScrollBarThickness = 6
    ScrollingFrame.Parent = Frame

    local UIListLayout = Instance.new("UIListLayout")
    UIListLayout.Padding = UDim.new(0, 10)
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Parent = ScrollingFrame

    game:GetService("RunService").RenderStepped:Connect(function()
    if ScrollingFrame and UIListLayout then
        ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + 10)
    end
end)

    local UIStroke = Instance.new("UIStroke")
    UIStroke.Color = Color3.fromRGB(64, 64, 64)
    UIStroke.Thickness = 2.45
    UIStroke.Parent = Frame

    Close.MouseButton1Click:Connect(function()
        local targetSize = Frame.Size == UDim2.new(0, 250, 0, 300) and UDim2.new(0, 250, 0, 50) or UDim2.new(0, 250, 0, 300)
        Frame:TweenSize(targetSize, Enum.EasingDirection.InOut, Enum.EasingStyle.Quad, 0.5, true)
    end)

    return Frame, ScrollingFrame
end

function Novauilib:CreateBox(PlaceHolder, Parent, Callback)
    if not Parent then
        warn("Parent not provided; element not added.")
        return nil
    end

    local Box = Instance.new("TextBox")
    Box.Size = UDim2.new(1, -10, 0, 30)
    Box.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    Box.PlaceholderText = PlaceHolder or ""
    Box.Text = ""
    Box.TextColor3 = Color3.new(1, 1, 1)
    Box.Font = Enum.Font.SourceSans
    Box.TextSize = 15
    Box.Parent = Parent

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 4)
    UICorner.Parent = Box

    if Callback then
        Box:GetPropertyChangedSignal("Text"):Connect(Callback)
    end

    return Box
end

function Novauilib:Createbtn(Text, Font, Parent, Callback)
    if not Parent then
        warn("Parent not provided; button not created.")
        return nil
    end

    local Button = Instance.new("TextButton")
    Button.Size = UDim2.new(1, -10, 0, 30)
    Button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    Button.Text = Text or "Button"
    Button.TextColor3 = Color3.new(1, 1, 1)
    Button.TextSize = 11.5
    Button.Font = Font or Enum.Font.FredokaOne
    Button.Parent = Parent

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 4)
    UICorner.Parent = Button

    if Callback then
        Button.MouseButton1Click:Connect(Callback)
    end

    return Button
end

function Novauilib:SendNotify(Text, Image)
    local Frame = Instance.new("Frame")
    Frame.Size = UDim2.new(0, 200, 0, 45)
    Frame.Position = UDim2.new(2, 0, 0.7, 0)
    Frame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    Frame.BorderSizePixel = 0
    Frame.Parent = gui

    local ImageLabel = Instance.new("ImageLabel")
    ImageLabel.Size = UDim2.new(0, 35, 0, 35)
    ImageLabel.Position = UDim2.new(0.05, 0, 0.14, 0)
    ImageLabel.Image = Image or ""
    ImageLabel.BackgroundTransparency = 1
    ImageLabel.Parent = Frame

    local TextLabel = Instance.new("TextLabel")
    TextLabel.Size = UDim2.new(0.7, 0, 1, 0)
    TextLabel.Position = UDim2.new(0.25, 0, 0, 0)
    TextLabel.Text = Text or "Notification"
    TextLabel.TextColor3 = Color3.new(1, 1, 1)
    TextLabel.Font = Enum.Font.FredokaOne
    TextLabel.BackgroundTransparency = 1
    TextLabel.Parent = Frame

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 5)
    UICorner.Parent = Frame

    Frame:TweenPosition(UDim2.new(0.675, 0, 0.7, 0), Enum.EasingDirection.InOut, Enum.EasingStyle.Quad, 2, true, function()
        task.wait(2)
        Frame:TweenPosition(UDim2.new(2, 0, 0.7, 0), Enum.EasingDirection.InOut, Enum.EasingStyle.Quad, 2, true, function()
            Frame:Destroy()
        end)
    end)

    return Frame
end

function Novauilib:CreateToggle(Text, Parent, CallBack, InitialState)
    local ToggleFrame = Instance.new("Frame")
    ToggleFrame.Size = UDim2.new(1, -10, 0, 30)
    ToggleFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    ToggleFrame.BorderSizePixel = 0
    ToggleFrame.Parent = Parent

    local P= Instance.new("UICorner")
    P.CornerRadius = UDim.new(0, 4)
    P.Parent = ToggleFrame

    local Label = Instance.new("TextLabel")
    Label.Size = UDim2.new(0.8, 0, 1, 0)
    Label.Position = UDim2.new(0, 5, 0, 0)
    Label.BackgroundTransparency = 1
    Label.Text = Text or "Toggle"
    Label.TextColor3 = Color3.new(1, 1, 1)
    Label.Font = Enum.Font.SourceSans
    Label.TextSize = 15
    Label.Parent = ToggleFrame

    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Size = UDim2.new(0, 20, 0, 20)
    ToggleButton.Position = UDim2.new(0.9, 0, 0.5, -10)
    ToggleButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    ToggleButton.Text = ""
    ToggleButton.Parent = ToggleFrame

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(1, 0)
    UICorner.Parent = ToggleButton

    local toggled = InitialState or false
    ToggleButton.MouseButton1Click:Connect(function()
        toggled = not toggled
        ToggleButton.BackgroundColor3 = toggled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(100, 100, 100)
        if CallBack then
            CallBack(toggled)
        end
    end)

    return ToggleFrame
end

return Novauilib
